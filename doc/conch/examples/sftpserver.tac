# Copyright (c) Twisted Matrix Laboratories.
# See LICENSE for details.

"""
An example SFTP server with authentication.

This example requires public and private keys that can be generated by the
'ckeygen' utility which is part of Twisted::

    ckeygen -b 2048 -t rsa -f id_rsa

Start the example with::

    twistd -ny sftpserver.tac


Note: this example only works on POSIX.
"""


from zope.interface import implements

from twisted.application import service, internet
from twisted.conch.ssh.keys import Key
from twisted.conch.ssh.factory import SSHFactory
from twisted.conch.unix import UnixSSHRealm
from twisted.cred.checkers import ICredentialsChecker
from twisted.cred.credentials import IUsernamePassword
from twisted.cred.portal import Portal


class DummyChecker(object):
    credentialInterfaces = (IUsernamePassword,)
    implements(ICredentialsChecker)

    def requestAvatarId(self, credentials):
        return credentials.username


def makeService():
    publicKey = Key.fromFile('id_rsa.pub')
    privateKey = Key.fromFile('id_rsa')

    factory = SSHFactory()
    factory.privateKeys = {'ssh-rsa': privateKey}
    factory.publicKeys = {'ssh-rsa': publicKey}
    factory.portal = Portal(UnixSSHRealm())
    factory.portal.registerChecker(DummyChecker())

    return internet.TCPServer(2200, factory)


application = service.Application("SFTP server")
sftp_server = makeService()
sftp_server.setServiceParent(application)

